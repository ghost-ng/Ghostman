name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ['3.12']

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install system dependencies (Linux)
      if: runner.os == 'Linux'
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          libegl1-mesa \
          libxkbcommon-x11-0 \
          libxcb-icccm4 \
          libxcb-image0 \
          libxcb-keysyms1 \
          libxcb-randr0 \
          libxcb-render-util0 \
          libxcb-xinerama0 \
          libxcb-xfixes0 \
          xvfb
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-cov flake8
    
    - name: Lint with flake8
      run: |
        # Stop the build if there are Python syntax errors or undefined names
        flake8 ghostman --count --select=E9,F63,F7,F82 --show-source --statistics
        # Exit-zero treats all errors as warnings
        flake8 ghostman --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    
    - name: Test import
      run: |
        python -c "import ghostman; print(f'ghost-ng version: {ghostman.__version__}')"
    
    - name: Run tests
      run: |
        pytest tests/ --cov=ghostman --cov-report=xml
      env:
        DISPLAY: ':99.0'
      if: runner.os == 'Linux'
    
    - name: Run tests
      run: |
        pytest tests/ --cov=ghostman --cov-report=xml
      if: runner.os != 'Linux'
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  build-check:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install build pyinstaller
    
    - name: Build Python package
      run: |
        python -m build
    
    - name: Test PyInstaller spec
      run: |
        pyinstaller --noconfirm --log-level=DEBUG ghost-ng.spec
    
    - name: Check if executable was created
      run: |
        test -f dist/ghost-ng || (echo "Executable not found" && exit 1)