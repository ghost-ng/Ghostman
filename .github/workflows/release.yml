name: Release

on:
  push:
    tags:
      - 'v*'  # Trigger on version tags like v0.1, v1.0.0

permissions:
  contents: write

jobs:
  create-release:
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Extract tag name
      id: extract_tag
      run: echo "TAG_NAME=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
    
    - name: Create Release
      id: create_release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ steps.extract_tag.outputs.TAG_NAME }}
        name: Ghostman ${{ steps.extract_tag.outputs.TAG_NAME }}
        body: |
          ## Ghostman (Spector) ${{ steps.extract_tag.outputs.TAG_NAME }}
          
          ### Installation
          Download the appropriate package for your platform below.
          
          ### What's New
          See [CHANGELOG](https://github.com/ghost-ng/Ghostman/blob/main/CHANGELOG.md) for details.
        draft: false
        prerelease: false
        generate_release_notes: true

  build-windows:
    needs: create-release
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller
    
    - name: Build Windows executable
      run: |
        pyinstaller ghostman.spec
    
    - name: Create archive
      run: |
        cd dist
        7z a -tzip ghostman-windows-x64.zip ghostman.exe
    
    - name: Upload Windows executable
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ github.ref_name }}
        files: ./dist/ghostman-windows-x64.zip

  build-linux:
    needs: create-release
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
    
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          libegl1-mesa \
          libxkbcommon-x11-0 \
          libxcb-icccm4 \
          libxcb-image0 \
          libxcb-keysyms1 \
          libxcb-randr0 \
          libxcb-render-util0 \
          libxcb-xinerama0 \
          libxcb-xfixes0
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller
    
    - name: Build Linux executable
      run: |
        pyinstaller ghostman.spec
    
    - name: Create archive
      run: |
        cd dist
        tar -czf ghostman-linux-x64.tar.gz ghostman
    
    - name: Upload Linux executable
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ github.ref_name }}
        files: ./dist/ghostman-linux-x64.tar.gz

  build-macos:
    needs: create-release
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller
    
    - name: Build macOS executable
      run: |
        pyinstaller ghostman.spec
    
    - name: Create archive
      run: |
        cd dist
        tar -czf ghostman-macos-x64.tar.gz ghostman
    
    - name: Upload macOS executable
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ github.ref_name }}
        files: ./dist/ghostman-macos-x64.tar.gz

  build-python-package:
    needs: create-release
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
    
    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine
    
    - name: Build Python package
      run: |
        python -m build
    
    - name: Upload Python packages to release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ github.ref_name }}
        files: |
          ./dist/*.whl
          ./dist/*.tar.gz
    
    # Optionally publish to PyPI
    # - name: Publish to PyPI
    #   env:
    #     TWINE_USERNAME: __token__
    #     TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
    #   run: |
    #     twine upload dist/*